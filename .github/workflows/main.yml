name: Android Build & MobSF Scan

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build APK & Scan with MobSF
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ovaa-app
          path: app/build/outputs/apk/debug/app-debug.apk

  security_scan:
    name: MobSF Security Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download APK from Build
        uses: actions/download-artifact@v4
        with:
          name: ovaa-app
          path: app/build/outputs/apk/debug/

      - name: Upload APK to MobSF API
        run: |
          APK_FILE="app/build/outputs/apk/debug/app-debug.apk"
          MOBS_URL="${{ secrets.AWS_MOBSF_IP }}/api/v1/upload"
          API_KEY="${{ secrets.MOBSF_API_KEY }}"

          echo "Enviando APK para análise no MobSF..."
          RESPONSE=$(curl -X POST "$MOBS_URL" -H "Authorization: $API_KEY" -F "file=@$APK_FILE")

          SCAN_ID=$(echo $RESPONSE | jq -r '.hash')

          if [ -z "$SCAN_ID" ] || [ "$SCAN_ID" == "null" ]; then
            echo "❌ Erro ao enviar o APK para análise! Resposta do servidor: $RESPONSE"
            exit 1
          fi

          echo "✅ Análise iniciada com ID: $SCAN_ID"
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV

      - name: Aguardar a análise do MobSF (30s)
        run: |
          echo "⏳ Aguardando 30 segundos para a análise do APK..."
          sleep 30

      - name: Testar se a análise foi concluída
        run: |
          CHECK_URL="${{ secrets.AWS_MOBSF_IP }}/api/v1/view_scan_result/$SCAN_ID"
          API_KEY="${{ secrets.MOBSF_API_KEY }}"

          RESPONSE=$(curl -X GET "$CHECK_URL" -H "Authorization: $API_KEY")

          if [[ "$RESPONSE" == *"Scan Not Completed"* ]]; then
            echo "⚠️ O scan ainda não foi concluído. Aguardando mais tempo..."
            sleep 20
          fi

      - name: Obter Relatório do MobSF
        run: |
          REPORT_URL="${{ secrets.AWS_MOBSF_IP }}/api/v1/report_json"
          API_KEY="${{ secrets.MOBSF_API_KEY }}"

          echo "📄 Obtendo relatório de análise..."
          RESPONSE=$(curl -X POST "$REPORT_URL" -H "Authorization: $API_KEY" -H "Content-Type: application/json" -d "{\"hash\": \"$SCAN_ID\"}")

          if [[ "$RESPONSE" == *"Unprocessable Entity"* ]]; then
            echo "❌ Erro ao obter o relatório. O scan pode não ter sido concluído corretamente."
            exit 1
          fi

          echo "$RESPONSE" > mobsf_report.json
          echo "✅ Relatório salvo com sucesso."

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: MobSF-Report
          path: mobsf_report.json
